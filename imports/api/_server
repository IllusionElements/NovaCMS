import { Meteor } from 'meteor/meteor';
import { HTTP } from 'meteor/http';
import { log } from '../both/logInit.js'
class DiscordAPI {
    constructor(version) {
        const _auth = Meteor.settings.private.discord.apiKey || void(0);
        this.apiKey = _auth || null;
        const self = this;
        this.vers = version || 6;
        this.hook = false;
        this.methods = {
            webhooks: {
                create({ name, channel_id, avatar }) {
                    return { type: 'POST' };
                },
                modify({webhook_id, webhook_token}){
                    return { type: 'PATCH', endpoint: `${self.vers}/webhooks/${webhook_id}/${webhook_token}`}
                },
                

                execute({ webhook_id, webhook_token }) {

                    return { type: 'POST', endpoint: `${self.vers}/webhooks/${webhook_id}/${webhook_token}` };
                },

                webhook({ webhook_id, webhook_token }) {
                    const def = { type: 'GET' };
                    const URI = bool => (
                        (bool === true) ? { endpoint: `${webhook_id}/${webhook_token}` } : { endpoint: webhook_id }
                    );
                    if (webhook_token) return { ...def, ...URI(true) }
                    return { ...def, ...URI(false) };
                }
            }
        };
    }

    buildRequestArguments(type, options) {
        const Payload = {};
        //   (this.hook !== true) ? (payload.auth = `discord: ${this.apiKey}`) : (payload.auth = ' ');
        
        if (type === 'GET') {
            Payload.params = options || {}
            return Payload.params;
        } else if(type==='PATCH'){
            Payload.data = {...options};
            return Payload.data;
        }
        else {
            let { payload, qs } = options;
            Payload.data = { ...Payload, data: {content:payload}, query: `wait=${qs}` } || {};
            if(type!=='POST') Payload.delete('query');
        
            return Payload.data
        }
        
    }
    request(action, options) {
        const type = action.type;
        const url = `https://discordapp.com/api/v${action.endpoint}`;
        const args = this.buildRequestArguments(type, options);
        console.log({...args},type)
        const request = HTTP.call(type, url, { ...args });
        
        if (request.error) return request.error;
        return request;
    }
    action(action, method, params) {
        const methodToCall = this.methods[action][method](params);
        return this.request(methodToCall, params);


    }

    webhooks(method, params) {
        this.hook = true;

        //    if (params.qs || typeof params.qs !== 'boolean') params.qs = false;
        return this.action('webhooks', method, params)
    }
}

export const Discord = new DiscordAPI();
